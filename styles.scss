@import "./variables.scss";

$green: #a8e04f;
$red: #f55f07;
$blue: #0f7cbb;

* {
	font-family: arial, tahoma, verdana;	
}

div#content {
	display: flex;
	flex-direction: row;

	svg {
		flex: 0 0 800px;
	}
	.catalogue {
		flex: 0 0 300px;
	}
}

svg {
	display: block;
	background-color: #EEE;
	text {
		font-family: arial, tahoma, verdana;
		font-size: 14px;
	}
}

button.link {
	background-color: transparent;
	padding: 0;
	margin: 0;
	border: 0;
	display: inline;
	cursor: pointer;
	color: $blue;
	
	&, &:active {
		outline: none;
	}
}

.draggable {
	cursor: pointer;
 	
 	&.drag {
 		cursor: move;

	 	.ept {
	 		transform: rotate(-5deg) scale(1.1);
	 		transform-origin: $eptWidth/2 $eptHeight/2;
	 	}
 	}
}

.ept {
	stroke-width: 0;

	.container {
		width: $eptWidth;
		height: $eptHeight;
		fill: #FFF;
		stroke: #444;
		stroke-width: 1;
	}

	text {
		&.title {
			transform: translate(10px, 28px);
			width: 100px;
			clip-path: inset(0 calc(100% - #{$eptWidth - 20px}) 0 0);
		}
	}
}

.connection-point {
	circle {
		r: $connectionPointRadius;
		// cx: $eptWidth / 2;
		stroke-width: 1;
		stroke: #000;

	}

	text {
		font-size: 12px;
	}

	&.in {
		circle {
			fill: $green;
		}
		text {
			transform: translate(15px, -10px);
		}
	}

	&.out {
		circle {
			fill: $red;
		}
		text {
			transform: translate(15px, 15px);
		}
	}

	&.approached {
		circle {
			stroke: orange;
			stroke-width: 3px;
		}
	}		
}

.linker {
	r: $connectionPointRadius - 2;
	// cx: 0;
	// cy: 0;
	stroke-width: 0;
	fill: rgba(0, 0, 0, 0.5);
}

.link {
	fill: none;
	stroke: #000;
	stroke-width: 2px;

	&:hover {
		stroke: $red;
	}
}

.catalogue {
	ul {
		padding-left: 15px;

		li {
			margin-bottom: 15px;
			list-style: none;

			h5 {
				margin: 0;
			}
		}
	}
}




// Definitions
path#arrow {
	stroke-linecap: round;
}

marker#arrow-marker {
	use {
		transform: translate(5px, 5px) rotate(180deg) scale(1,1);

		stroke-width: 1.0000;
		fill: #000;
		stroke: none;
	}
}